name: Build and Release HttpClient Curl Visualizer

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [published, created]  # Hem published hem de created event'lerini dinle

jobs:
  build:
    runs-on: windows-latest
    steps:
      # ... mevcut build adımları aynı kalacak ...

  release:
    needs: build
    runs-on: windows-latest
    permissions:
      contents: write
    # if: github.event_name == 'release'  # Bu satırı kaldırın veya yorum satırı yapın
    
    steps:
      - name: Debug GitHub Context
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Event Action: ${{ github.event.action }}"
          echo "Release Tag: ${{ github.event.release.tag_name }}"
          echo "Upload URL: ${{ github.event.release.upload_url }}"
          echo "Full Event: ${{ toJson(github.event) }}"
          
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: Installation-Package
          path: release-files/

      - name: Verify Files
        run: |
          cd release-files
          ls -la
          
      - name: Create ZIP
        run: |
          cd release-files
          $tag = "${{ github.event.release.tag_name }}"
          if (-not $tag) { 
            echo "##[warning]No tag name found, using 'latest'"
            $tag = "latest" 
          }
          Compress-Archive -Path * -DestinationPath "HttpClientCurlVisualizer-$tag.zip"
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: release-files/HttpClientCurlVisualizer-${{ github.event.release.tag_name }}.zip
          asset_name: HttpClientCurlVisualizer-${{ github.event.release.tag_name }}.zip
